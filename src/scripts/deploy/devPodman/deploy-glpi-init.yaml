---
- name: "Prepare GLPI environment for Podman"
  hosts: "{{ target_host | default('localhost') }}"
  gather_facts: true

  pre_tasks:
    - name: "Include project default vars"
      ansible.builtin.include_vars: "{{ file_to_include }}"
      loop:
        - ../../defaults/main.yaml
        - defaults/main.yaml
      loop_control:
        loop_var: file_to_include

  tasks:
    - name: Set crypt file contents
      ansible.builtin.set_fact:
      # <your command or message>{% elif <your condition> %}<your command or message>{% else <your condition> %}<your command or message>{% endif %}
        crypt_file_contents: "{% if crypt_file_location is defined %}{{ lookup('file', crypt_file_location ) | default('') | b64encode }}{% else %}{% endif %}"
      # when: crypt_file_location is defined

    - name: Print crypt_file_contents
      ansible.builtin.debug:
        var: crypt_file_contents

    - name: "Create GLPI volumes"
      containers.podman.podman_volume:
        state: present
        name: volume_to_create
        label:
          part-of: glpi
      loop:
        - trikorasolns_glpi_glpi_var
        - trikorasolns_glpi_glpi_etc
      loop_control:
        loop_var: volume_to_create

    - name: Pause for 5 seconds
      ansible.builtin.pause:
        seconds: 5

    - name: "Launch init container"
      containers.podman.podman_container:
        name: "{{ image_prefix }}_init"
        image: "localhost/{{ image_prefix }}_init"
        pod: "{{ pod_name }}"
        # privileged: true
        state: started
        command: /opt/glpi/glpi-install.sh
        # entrypoint: /opt/glpi/glpi-install.sh
        user: 33
        group_add:
          - 33
        volumes:
          - trikorasolns_glpi_glpi_var:/var/lib/glpi
          - trikorasolns_glpi_glpi_etc:/etc/glpi
          # - /tmp/glpi/var_lib:/var/lib/glpi:Z
          # - /tmp/glpi/var_lib:/var/lib/glpi
        env:
          GLPI_DB_HOST: "{{ image_prefix }}_db"
          GLPI_DB_PORT: "{{ mysql.db_port }}"
          GLPI_DB_USER_NAME: "{{ mysql.user }}"
          GLPI_DB_USER_PASSWORD: "{{ mysql.password }}"
          GLPI_DB_NAME: "{{ mysql.database }}"
          GLPI_LANGUAGE: "{{ glpi_language }}"
          GLPI_CRYPT: "{{ crypt_file_contents }}"
      register: init_container_res
      # async: 45
      # poll: 5

    - name: "Wait for init container to end"
      ansible.builtin.shell: |
        podman wait --condition stopped {{ image_prefix }}_init
      # ansible.builtin.wait_for:
        # port: 80
        # state: drained
...
